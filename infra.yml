services:
    socketserver:
        container_name: socketserver
        build:
            context: ./socket
            dockerfile: node.dockerfile
        restart: always
        env_file:
            - .env
        expose:
            - '3001'
        depends_on:
            - kafka
    nginx:
        container_name: nginx
        build: ./nginx
        ports:
            - 80:80
        depends_on:
            - buymezobo
            - socketserver
    db:
        container_name: buy-me-zobo-db
        image: postgres
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_DB=mydb
        # ports:
        #     - 6500:5432
        volumes:
            - pgdata:/var/lib/postgresql/data

    zookeeper:
        image: wurstmeister/zookeeper
        container_name: zookeeper
        ports:
            - '2181:2181'

    kafka:
        image: wurstmeister/kafka:latest
        container_name: kafka
        # ports:
        #     - '9092:9092'
        expose:
            - '9093'
        logging:
            driver: none
        environment:
            KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
            KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
            KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_CREATE_TOPICS: 'my-topic:1:1'
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
    redis:
        image: redis:latest
        container_name: redis
        restart: always
        # ports:
        #   - '6379:6379'
        volumes:
            - /path/to/local/d–∞ta:/root/redis
            - /path/to/local/redis.conf:/usr/local/etc/redis/redis.conf
        environment:
            - REDIS_PASSWORD=my-password
            - REDIS_PORT=6379
            - REDIS_DATABASES=16

volumes:
    pgdata: {}
